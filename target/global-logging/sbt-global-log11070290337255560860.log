[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\virta\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\virta\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 11.0.10)
[debug]       Load.loadUnit: plugins took 85.8664ms
[debug]       Load.loadUnit: defsScala took 0.2426ms
[debug] [Loading] Scanning directory C:\Users\virta\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\virta\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.0041 ms
[debug]           Load.resolveProject(global-plugins) took 42.795ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\virta\.sbt\1.0\plugins, plugins: List(<none>))) took 88.0742ms
[debug] [Loading] Done in C:\Users\virta\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 106.4634ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2115ms
[debug]     Load.loadUnit(file:/C:/Users/virta/.sbt/1.0/plugins/, ...) took 201.7209ms
[debug]   Load.apply: load took 370.7434ms
[debug]   Load.apply: resolveProjects took 5.0984ms
[debug]   Load.apply: finalTransforms took 47.7675ms
[debug]   Load.apply: config.delegates took 5.5119ms
[debug]   Load.apply: Def.make(settings)... took 1450.1439ms
[debug]   Load.apply: structureIndex took 77.1582ms
[debug]   Load.apply: mkStreams took 1.3659ms
[info] loading global plugins from C:\Users\virta\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3858.4347ms
[debug]           Load.loadUnit: plugins took 24.4258ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\virta\IdeaProjects\Tower Defence\project
[debug]             Load.loadUnit: mkEval took 7.9601ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\virta\IdeaProjects\Tower Defence\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4297 ms
[info] loading settings for project tower-defence-build from idea.sbt ...
[debug]               Load.resolveProject(tower-defence-build) took 10.0972ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tower-defence-build, base: C:\Users\virta\IdeaProjects\Tower Defence\project, plugins: List(<none>))) took 13.1993ms
[debug] [Loading] Done in C:\Users\virta\IdeaProjects\Tower Defence\project, returning: (tower-defence-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1890.6463ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.7716ms
[debug]         Load.loadUnit(file:/C:/Users/virta/IdeaProjects/Tower%20Defence/project/, ...) took 1921.8883ms
[debug]       Load.apply: load took 1923.8785ms
[debug]       Load.apply: resolveProjects took 0.1119ms
[debug]       Load.apply: finalTransforms took 7.2583ms
[debug]       Load.apply: config.delegates took 0.2911ms
[debug]       Load.apply: Def.make(settings)... took 71.5617ms
[debug]       Load.apply: structureIndex took 20.678ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\virta\IdeaProjects\Tower Defence\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3660.575ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\virta\IdeaProjects\Tower Defence
[debug]       Load.loadUnit: mkEval took 0.4571ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\virta\IdeaProjects\Tower Defence, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4395 ms
[info] loading settings for project tower-defence from build.sbt ...
[debug]         Load.resolveProject(tower-defence) took 27.988ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tower-defence, base: C:\Users\virta\IdeaProjects\Tower Defence, plugins: List(<none>))) took 32.0225ms
[debug] [Loading] Done in C:\Users\virta\IdeaProjects\Tower Defence, returning: (tower-defence)
[debug]     Load.loadUnit: loadedProjectsRaw took 795.4215ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.5417ms
[debug]   Load.loadUnit(file:/C:/Users/virta/IdeaProjects/Tower%20Defence/, ...) took 4466.3143ms
[debug] Load.apply: load took 4468.4522ms
[debug] Load.apply: resolveProjects took 0.1251ms
[debug] Load.apply: finalTransforms took 24.6132ms
[debug] Load.apply: config.delegates took 0.2671ms
[debug] Load.apply: Def.make(settings)... took 76.9483ms
[debug] Load.apply: structureIndex took 31.8315ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to Tower Defence (in build file:/C:/Users/virta/IdeaProjects/Tower%20Defence/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59925 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59925, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Tower Defence (in build file:/C:/Users/virta/IdeaProjects/Tower%20Defence/)
[debug] > Exec(idea-shell, None, None)
